<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="welcome_card" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\welcome_card.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="WELCOME_CARD_TITLE" xml:space="preserve">
    <value>Hello {0}, I am the Notes bot.</value>
    <comment>The placeholder is the name or the id of the user.</comment>
  </data>
  <data name="HELP_CARD_TEXT" xml:space="preserve">
    <value>Select a command to learn how to use it.</value>
  </data>
  <data name="HELP_TITLE" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="NOTE_TITLE" xml:space="preserve">
    <value>You have &lt;b&gt;{0} notes&lt;/b&gt;.</value>
    <comment>The placeholder is the number of notes found.</comment>
  </data>
  <data name="NOT_UNDERSTOOD" xml:space="preserve">
    <value>Sorry, I didn’t get that.</value>
  </data>
  <data name="WELCOME_CARD_TEXT" xml:space="preserve">
    <value>I am here to be your assistant and take notes for you.</value>
  </data>
  <data name="DELETE" xml:space="preserve">
    <value>delete</value>
    <comment>Command for deleting the notes.</comment>
  </data>
  <data name="DELETE_FORCE" xml:space="preserve">
    <value>delete force</value>
    <comment>Command for deleting all the notes without making sure prompt.</comment>
  </data>
  <data name="DELETE_HELP_TEXT" xml:space="preserve">
    <value>Use the **delete** command to delete all your notes. You will be prompted before final deletion.</value>
  </data>
  <data name="HELP" xml:space="preserve">
    <value>help</value>
    <comment>Command for help.</comment>
  </data>
  <data name="HELP_DELETE" xml:space="preserve">
    <value>help delete</value>
    <comment>Command that will show how to use the delete command.</comment>
  </data>
  <data name="HELP_NOTE" xml:space="preserve">
    <value>help note</value>
    <comment>Command that will show how to use the note command.</comment>
  </data>
  <data name="HELP_SHOW" xml:space="preserve">
    <value>help show</value>
    <comment>Command that will show how to use the show command.</comment>
  </data>
  <data name="HELP_TYPE" xml:space="preserve">
    <value>HelpType</value>
  </data>
  <data name="IS_GENERIC_HELP" xml:space="preserve">
    <value>IsGenericHelp</value>
  </data>
  <data name="NOTE" xml:space="preserve">
    <value>note</value>
    <comment>Command for creating the notes.</comment>
  </data>
  <data name="NOTE_HELP_TEXT" xml:space="preserve">
    <value>Use the **note** command to capture a simple note. For example...

*note call mom tomorrow*

*note send the project proposal*</value>
  </data>
  <data name="NO_NOTES_TO_DELETE" xml:space="preserve">
    <value>You have no notes to delete.</value>
  </data>
  <data name="SHOW" xml:space="preserve">
    <value>show</value>
    <comment>Command for showing the notes.</comment>
  </data>
  <data name="SHOW_HELP_TEXT" xml:space="preserve">
    <value>Use the **show** command to display all of your notes. You can also display only notes that contain specific words. For example...

*show*

*show call mom*

*show project*</value>
  </data>
  <data name="USER" xml:space="preserve">
    <value>user</value>
  </data>
  <data name="WELCOME_CARD_LINK" xml:space="preserve">
    <value>https://notesbotapp.azurewebsites.net/Resources/welcome_card.png</value>
  </data>
  <data name="DELETED_ALL_TEXT" xml:space="preserve">
    <value>All of your **{0} notes** have been **permanently deleted**.</value>
    <comment>The placeholder is the number of notes that have been permanently deleted.</comment>
  </data>
  <data name="DELETE_ASK_CARD_NO" xml:space="preserve">
    <value>No, show all</value>
  </data>
  <data name="DELETE_ASK_CARD_TEXT" xml:space="preserve">
    <value>This will permanently delete all of your notes. Are you sure?</value>
  </data>
  <data name="DELETE_ASK_CARD_TITLE" xml:space="preserve">
    <value>Delete all notes?</value>
  </data>
  <data name="DELETE_ASK_CARD_YES" xml:space="preserve">
    <value>Yes, delete all</value>
  </data>
  <data name="DELETE_NOTES" xml:space="preserve">
    <value>Delete notes</value>
  </data>
  <data name="NOTE_ADDED_SUCCESSFULLY" xml:space="preserve">
    <value>Note added successfully!</value>
  </data>
  <data name="SHOW_NOTES" xml:space="preserve">
    <value>Show notes</value>
  </data>
  <data name="NOTE_NO_CONTENT" xml:space="preserve">
    <value>Please add text to save the note.</value>
  </data>
</root>